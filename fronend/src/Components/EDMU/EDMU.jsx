import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import "./EDMU.css";

export const EDMU = () => {
  const navigate = useNavigate();
  const [items, setItems] = useState([]);
  const [totalPrice, setTotalPrice] = useState(0);

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå
  const fetchOrders = async () => {
    try {
      const response = await fetch("http://localhost:3002/api/orders");
      const data = await response.json();

      console.log("üìå API ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:", data);

      if (!Array.isArray(data)) {
        console.error("‚ùå API ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏£‡∏¢‡πå:", data);
        return;
      }

      const filteredData = data.filter((item) => Number(item.tableid) === 4);
      console.log("üìå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á (tableid=4):", filteredData);

      setItems(filteredData);
      setTotalPrice(
        filteredData.reduce(
          (sum, item) => sum + item.price * (item.quantity || 1),
          0
        )
      );
    } catch (error) {
      console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:", error);
    }
  };

  useEffect(() => {
    fetchOrders();
  }, []);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå
  const deleteOrder = async (oderid) => {
    if (!oderid) {
      console.error("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡πÑ‡∏î‡πâ: oderid ‡πÄ‡∏õ‡πá‡∏ô undefined");
      alert("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ (‡πÑ‡∏°‡πà‡∏°‡∏µ oderid)");
      return;
    }

    try {
      const response = await fetch(`http://localhost:3002/api/orders/${oderid}`, {
        method: "DELETE",
      });

      if (response.ok) {
        setItems((prevItems) => prevItems.filter((item) => item.oderid !== oderid));
        setTotalPrice((prevTotal) => prevTotal - (items.find(item => item.oderid === oderid)?.price || 0));
        alert("‚úÖ ‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
      } else {
        alert("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ");
      }
    } catch (error) {
      console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:", error);
    }
  };

  const placeOrder = () => {
    alert("‚úÖ ‡∏™‡∏±‡πà‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!");
  };

  return (
    <div className="shopping-cart">
      <h1>Shopping Cart</h1>
      <p className="item-count">‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {items.length} ‡∏ä‡∏¥‡πâ‡∏ô</p>
      <div className="cart-items">
        {items.length > 0 ? (
          items.map((item, index) => (
            <div key={item.oderid || `temp-${index}`} className="cart-item">
              <div className="item-details">
                <h2>{item.manu}</h2>
                <p>{item.note}</p>
                <p>{item.price} ‡∏ø</p>
                <p>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {item.quantity || 1}</p>
              </div>
              <button
                className="delete-button"
                onClick={() => {
                  if (item.oderid) {
                    deleteOrder(item.oderid);
                  } else {
                    console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö oderid ‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ:", item);
                  }
                }}
              >
                ‡∏•‡∏ö
              </button>
            </div>
          ))
        ) : (
          <p>‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏ï‡πä‡∏∞‡∏ô‡∏µ‡πâ</p>
        )}
      </div>

      <div className="cart-summary">
        <p>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏° {totalPrice} ‡∏ö‡∏≤‡∏ó</p>
      </div>
      <button className="order-button" onClick={placeOrder}>
        ‡∏™‡∏±‡πà‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£
      </button>
    </div>
  );
};

export default EDMU;
