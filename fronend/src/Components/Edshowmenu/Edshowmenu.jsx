import React, { useEffect, useState } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import axios from 'axios';
import { toast } from 'react-toastify';
import './Edshowmenu.css';

const Edshowmenu = () => {
  const { menuid } = useParams();
  const navigate = useNavigate();

  const [formData, setFormData] = useState({
    name: '',
    inkitchen: '',
    price: '',
    details: '',
    component: '',
    todo: '',
    type: ''
  });

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
  useEffect(() => {
    axios.get(`http://localhost:3002/api/menu/${menuid}`)
      .then((response) => {
        const data = response.data;
        setFormData({
          name: data.name || '',
          inkitchen: data.inkitchen || '',
          price: data.price || '',
          details: data.details || '',
          component: data.component || '',
          todo: data.todo || '',
          type: data.type || ''
        });
      })
      .catch((error) => {
        console.error('Error fetching menu data:', error);
        toast.error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏ô‡∏π‡πÑ‡∏î‡πâ");
      });
  }, [menuid]);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°
  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°
  const handleSubmit = async (e) => {
    e.preventDefault();

    const missingFields = Object.entries(formData)
      .filter(([_, value]) => !value)
      .map(([key]) => key);

    if (missingFields.length > 0) {
      alert(`‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ${missingFields.join(', ')}`);
      return;
    }

    try {
      const formDataToSend = {
        name: formData.name,
        inkitchen: formData.inkitchen,
        price: formData.price,
        details: formData.details,
        component: formData.component,
        todo: formData.todo,
        type: formData.type
      };

      await axios.put(`http://localhost:3002/api/menu/${menuid}`, formDataToSend);
      toast.success("‡πÄ‡∏°‡∏ô‡∏π‡∏ñ‡∏π‡∏Å‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!");
      navigate('/Edit_menu');
    } catch (error) {
      console.error('Error updating menu:', error);
      toast.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏°‡∏ô‡∏π");
    }
  };

  return (
    <div className="edit-menu-container">
      <h2>üçΩÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏°‡∏ô‡∏π</h2>
      <form onSubmit={handleSubmit} className="edit-form">
        {/* ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏ô‡∏π */}
        <div className="form-group">
          <label htmlFor="name">‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏ô‡∏π:</label>
          <input
            type="text"
            id="name"
            name="name"
            value={formData.name}
            onChange={handleChange}
            required
          />
        </div>

        {/* ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÉ‡∏ô‡∏Ñ‡∏£‡∏±‡∏ß */}
        <div className="form-group">
          <label htmlFor="inkitchen">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÉ‡∏ô‡∏Ñ‡∏£‡∏±‡∏ß:</label>
          <input
            type="text"
            id="inkitchen"
            name="inkitchen"
            value={formData.inkitchen}
            onChange={handleChange}
            required
          />
        </div>

        {/* ‡∏£‡∏≤‡∏Ñ‡∏≤ */}
        <div className="form-group">
          <label htmlFor="price">‡∏£‡∏≤‡∏Ñ‡∏≤:</label>
          <input
            type="text"
            id="price"
            name="price"
            value={formData.price}
            onChange={handleChange}
            required
          />
        </div>

        {/* ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î */}
        <div className="form-group">
          <label htmlFor="details">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î:</label>
          <input
            type="text"
            id="details"
            name="details"
            value={formData.details}
            onChange={handleChange}
            required
          />
        </div>

        {/* ‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö */}
        <div className="form-group">
          <label htmlFor="component">‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö:</label>
          <input
            type="text"
            id="component"
            name="component"
            value={formData.component}
            onChange={handleChange}
          />
        </div>

        {/* ‡∏ó‡∏≥‡πÄ‡∏™‡∏£‡πá‡∏à */}
        <div className="form-group">
          <label htmlFor="todo">‡∏ó‡∏≥‡πÄ‡∏™‡∏£‡πá‡∏à:</label>
          <input
            type="text"
            id="todo"
            name="todo"
            value={formData.todo}
            onChange={handleChange}
          />
        </div>

        {/* ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó */}
        <div className="form-group">
          <label htmlFor="type">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó:</label>
          <input
            type="text"
            id="type"
            name="type"
            value={formData.type}
            onChange={handleChange}
          />
        </div>

        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å */}
        <button type="submit" className="save-button">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</button>
        <button type="button" className="cancel-button" onClick={() => navigate('/Chosemenu')}>
          ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
        </button>
      </form>
    </div>
  );
};

export default Edshowmenu;
